{"version":3,"file":"vue.js","sources":["../../src/array.js","../../util/index.js","../../src/observer.js","../../src/state.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["//重写数组的 7个方法  push shift unshift pop reverse sort splice 会导致数组本身发生变化\n\nimport { observe } from \"./observer\";\n\n// slice() 不会改变数组 就不用劫持\nlet  oldArrayMethods = Array.prototype;\n\nexport const arrayMethods = Object.create(oldArrayMethods);\n\nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'sort',\n    'splice',\n    'reverse'\n];\n\nmethods.forEach(method=>{\n    arrayMethods[method] = function (...args) {\n        console.log('用户调用了数组的方法');\n        const result = oldArrayMethods[method].apply(this,args);//调用原生的数组方法\n       // push unshift  添加的元素 可能还是一个对象\n       let inserted;//当前用户插入的元素\n       let ob = this.__ob__;\n       switch(method){\n            case 'push':\n            case 'unshift':\n            inserted = args;\n            break;\n            case 'splice':\n            inserted = args.slice(2)\n            default:\n                break;\n       }\n       if(inserted) ob.observerArray(inserted);//新增属性继续观测\n        return result;\n    }\n})","export function isObject(data) {\n    return typeof data === 'object' && data !== null;\n}\n\nexport function def(data,key,value) {\n    Object.defineProperty(data,key,{\n        enumerable:false,\n        configurable:false,\n        value:value\n    })\n}","//把data中的数据 使用Object.defineProperty 重新定义ES5 \nimport {arrayMethods} from './array.js';\nimport {isObject,def} from '../util/index'\nclass Observer{\n    constructor(value){\n        //    value.__ob__ = this;\n          def(value,'__ob__',this);\n            //vue如果数据层次过多 需要递归的去解析对象中的属性，依次增加set get方法\n            // proxy不用递归解析就可以\n            if(Array.isArray(value)){\n                // 如果是数组的话 并不会对索引进行观测  因为会导致性能问题\n                //前端开发中 很少 很少操作索引 push shift unshift重新这些方法\n                //如果数组放的是对象 我再监控\n                value.__proto__ = arrayMethods;\n                this.observerArray(value);\n            }else{\n                this.walk(value);\n            }\n            \n    }\n    observerArray(value){\n        for(let i=0;i<value.length;i++){\n            observe(value[i]);\n        }\n    }\n    walk(data){\n\n        let keys = Object.keys(data);\n        keys.forEach((key)=>{\n            defineReactive(data,key,data[key]);\n        })\n\n        // let keys = Object.keys(data);//[name,age];\n        // for(let i = 0;i<keys.length;i++){\n        //     let key = keys[i];\n        //     let value = data[key];\n        //     defineReactive(data,key,value);//定义响应式\n        // }\n    }\n}\n\nfunction defineReactive(data,key,value) {\n    //传入value递归判断是否是对象 进行数据劫持\n    observe(value);\n    Object.defineProperty(data,key,{\n        get(){//获取值的时候做一些操作\n            return value;\n        },\n        set(newValue){//设置值的时候做一些操作\n            if(newValue === value) return;\n            //设置的值可能也是一个对象 要继续劫持\n            observe(newValue);\n            //值放生变化了\n            value = newValue;\n        }\n    });\n}\n\nexport function observe(data) {\n    // console.log(data,'observe');\n    let isObj = isObject(data);\n    // console.log(isObj);\n    if(!isObj){\n        return;\n    }\n   return new Observer(data);//用来观测数据    \n}","import {observe} from './observer';\nexport function initState(vm) {\n    const opts = vm.$options;\n    //vue的数据来源 属性 方法  数据 计算属性 watch\n    if(opts.props){\n        initProps(vm);\n    }\n    if(opts.methods){\n        initMethod(vm);\n    }\n    if(opts.data){\n        initData(vm);\n    }\n    if(opts.computed){\n        initComputed(vm);\n    }\n    if(opts.watch){\n        initWatch(vm);\n    }\n}\n\nfunction initProps() {\n    \n}\n\nfunction initMethod() {\n    \n}\n\nfunction initData(vm) {\n    // 数据初始化工作\n    // console.log('初始化数据',vm.$options);\n    //data可能是对象 也可能是函数(方法) 是方法就执行返回一个对象\n    let data = vm.$options.data;//用户传递的数据\n    data = vm._data = typeof data === 'function'?data.call(vm):data;\n    //对象劫持   用户改变数据 我希望可以得到通知\n    // MVVM模式  数据变化 可以驱动界面的更新\n    // console.log(data); \n    observe(data);//响应式原理 增加get set方法\n\n}\n\nfunction initComputed() {\n    \n}\n\nfunction initWatch() {\n    \n}","\n// ast语法树  用对象来描述原生语法的 虚拟dmo 用对象来描述dom节点的\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nexport function compileToFunction(template) {\n    return function render() {\n\n    }\n}\n\n\n// let root = {\n//     tag:'div',\n//     attrs:[{name:'id',value:'app'}],\n//     parent:null,\n//     children:[\n//         {\n//             tag:'p',\n//             attrs:[],\n//             parent:root,\n//             type:1,\n//             children:[\n//                 {\n//                     text:'hello',\n//                     type:3\n//                 }\n//             ]\n//         }\n//     ]\n// }","import {initState} from './state'\nimport {compileToFunction} from './compiler/index.js'\n//在原型上添加一个init方法\n\nexport function initMixin(Vue) {\n    Vue.prototype._init =function (options) {\n        // console.log(options);\n        // 数据的劫持\n        const vm = this;// vue中使用this.$options指代的是用户传递的属性\n        vm.$options = options;\n        //初始化状态\n        initState(vm);//分割代码\n        // 如果用户传入了el属性 需要将页面渲染出来\n        // 如果用户传入了el就要实现挂载的功能\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el);\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n        // 默认先会查找render方法，没有就会采用template，没有\n        //就采用el中的模板\n        if(!options.render){\n            //对模板进行编译\n            let template = options.template;//取出模板\n            if(!template && el){\n                template = el.outerHTML;\n            }\n            console.log(template);\n            // 我们需要将template转化render方法 \n            const render = compileToFunction(template);\n            options.render = render;\n        }\n    }\n}","// Vue核心代码  是Vue的一个声明\nimport {initMixin} from './init'\nfunction Vue(options) {\n    // Vue初始化操作\n    // console.log(options);\n    this._init(options);\n}\n\n// 通过引入文件的方式 给Vue原型上添加方法\ninitMixin(Vue);//给Vue原型上添加一个_init方法\n\nexport default Vue;"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","console","log","args","result","apply","inserted","ob","__ob__","slice","observerArray","isObject","data","def","key","value","defineProperty","enumerable","configurable","Observer","isArray","__proto__","walk","i","length","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","compileToFunction","template","render","initMixin","Vue","_init","options","el","$mount","document","querySelector","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;EAKA,IAAKA,eAAe,GAAGC,KAAK,CAACC,SAA7B;EAEO,IAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,eAAd,CAArB;EAEP,IAAMM,OAAO,GAAG,CACZ,MADY,EAEZ,OAFY,EAGZ,SAHY,EAIZ,KAJY,EAKZ,MALY,EAMZ,QANY,EAOZ,SAPY,CAAhB;EAUAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAE;EACpBL,EAAAA,YAAY,CAACK,MAAD,CAAZ,GAAuB,YAAmB;EACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;EADsC,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EAEtC,QAAMC,MAAM,GAAGZ,eAAe,CAACQ,MAAD,CAAf,CAAwBK,KAAxB,CAA8B,IAA9B,EAAmCF,IAAnC,CAAf,CAFsC;EAGvC;;EACA,QAAIG,QAAJ,CAJuC;;EAKvC,QAAIC,EAAE,GAAG,KAAKC,MAAd;;EACA,YAAOR,MAAP;EACK,WAAK,MAAL;EACA,WAAK,SAAL;EACAM,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACA,WAAK,QAAL;EACAG,QAAAA,QAAQ,GAAGH,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;EANL;;EAUA,QAAGH,QAAH,EAAaC,EAAE,CAACG,aAAH,CAAiBJ,QAAjB,EAhB0B;;EAiBtC,WAAOF,MAAP;EACH,GAlBD;EAmBH,CApBD;;ECnBO,SAASO,QAAT,CAAkBC,IAAlB,EAAwB;EAC3B,SAAO,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAA5C;EACH;EAEM,SAASC,GAAT,CAAaD,IAAb,EAAkBE,GAAlB,EAAsBC,KAAtB,EAA6B;EAChCnB,EAAAA,MAAM,CAACoB,cAAP,CAAsBJ,IAAtB,EAA2BE,GAA3B,EAA+B;EAC3BG,IAAAA,UAAU,EAAC,KADgB;EAE3BC,IAAAA,YAAY,EAAC,KAFc;EAG3BH,IAAAA,KAAK,EAACA;EAHqB,GAA/B;EAKH;;MCPKI;EACF,oBAAYJ,KAAZ,EAAkB;EAAA;;EACd;EACEF,IAAAA,GAAG,CAACE,KAAD,EAAO,QAAP,EAAgB,IAAhB,CAAH,CAFY;EAIV;;EACA,QAAGtB,KAAK,CAAC2B,OAAN,CAAcL,KAAd,CAAH,EAAwB;EACpB;EACA;EACA;EACAA,MAAAA,KAAK,CAACM,SAAN,GAAkB1B,YAAlB;EACA,WAAKe,aAAL,CAAmBK,KAAnB;EACH,KAND,MAMK;EACD,WAAKO,IAAL,CAAUP,KAAV;EACH;EAER;;;;oCACaA,OAAM;EAChB,WAAI,IAAIQ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,KAAK,CAACS,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;EAC3BE,QAAAA,OAAO,CAACV,KAAK,CAACQ,CAAD,CAAN,CAAP;EACH;EACJ;;;2BACIX,MAAK;EAEN,UAAIc,IAAI,GAAG9B,MAAM,CAAC8B,IAAP,CAAYd,IAAZ,CAAX;EACAc,MAAAA,IAAI,CAAC3B,OAAL,CAAa,UAACe,GAAD,EAAO;EAChBa,QAAAA,cAAc,CAACf,IAAD,EAAME,GAAN,EAAUF,IAAI,CAACE,GAAD,CAAd,CAAd;EACH,OAFD,EAHM;EAQN;EACA;EACA;EACA;EACA;EACH;;;;;;EAGL,SAASa,cAAT,CAAwBf,IAAxB,EAA6BE,GAA7B,EAAiCC,KAAjC,EAAwC;EACpC;EACAU,EAAAA,OAAO,CAACV,KAAD,CAAP;EACAnB,EAAAA,MAAM,CAACoB,cAAP,CAAsBJ,IAAtB,EAA2BE,GAA3B,EAA+B;EAC3Bc,IAAAA,GAD2B,iBACtB;EAAC;EACF,aAAOb,KAAP;EACH,KAH0B;EAI3Bc,IAAAA,GAJ2B,eAIvBC,QAJuB,EAId;EAAC;EACV,UAAGA,QAAQ,KAAKf,KAAhB,EAAuB,OADd;;EAGTU,MAAAA,OAAO,CAACK,QAAD,CAAP,CAHS;;EAKTf,MAAAA,KAAK,GAAGe,QAAR;EACH;EAV0B,GAA/B;EAYH;;EAEM,SAASL,OAAT,CAAiBb,IAAjB,EAAuB;EAC1B;EACA,MAAImB,KAAK,GAAGpB,QAAQ,CAACC,IAAD,CAApB,CAF0B;;EAI1B,MAAG,CAACmB,KAAJ,EAAU;EACN;EACH;;EACF,SAAO,IAAIZ,QAAJ,CAAaP,IAAb,CAAP,CAP2B;EAQ7B;;ECjEM,SAASoB,SAAT,CAAmBC,EAAnB,EAAuB;EAC1B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB,CAD0B;;EAG1B,MAAGD,IAAI,CAACE,KAAR,EAAc;;EAGd,MAAGF,IAAI,CAACpC,OAAR,EAAgB;;EAGhB,MAAGoC,IAAI,CAACtB,IAAR,EAAa;EACTyB,IAAAA,QAAQ,CAACJ,EAAD,CAAR;EACH;;EACD,MAAGC,IAAI,CAACI,QAAR,EAAiB;;EAGjB,MAAGJ,IAAI,CAACK,KAAR,EAAc;EAGjB;;EAUD,SAASF,QAAT,CAAkBJ,EAAlB,EAAsB;EAClB;EACA;EACA;EACA,MAAIrB,IAAI,GAAGqB,EAAE,CAACE,QAAH,CAAYvB,IAAvB,CAJkB;;EAKlBA,EAAAA,IAAI,GAAGqB,EAAE,CAACO,KAAH,GAAW,OAAO5B,IAAP,KAAgB,UAAhB,GAA2BA,IAAI,CAAC6B,IAAL,CAAUR,EAAV,CAA3B,GAAyCrB,IAA3D,CALkB;EAOlB;EACA;;EACAa,EAAAA,OAAO,CAACb,IAAD,CAAP,CATkB;EAWrB;;ECvCD;EASO,SAAS8B,iBAAT,CAA2BC,QAA3B,EAAqC;EACxC,SAAO,SAASC,MAAT,GAAkB,EAAzB;EAGH;EAID;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EC/BO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;EAC3BA,EAAAA,GAAG,CAACpD,SAAJ,CAAcqD,KAAd,GAAqB,UAAUC,OAAV,EAAmB;EACpC;EACA;EACA,QAAMf,EAAE,GAAG,IAAX,CAHoC;;EAIpCA,IAAAA,EAAE,CAACE,QAAH,GAAca,OAAd,CAJoC;;EAMpChB,IAAAA,SAAS,CAACC,EAAD,CAAT,CANoC;EAOpC;EACA;;EACA,QAAGA,EAAE,CAACE,QAAH,CAAYc,EAAf,EAAkB;EACdhB,MAAAA,EAAE,CAACiB,MAAH,CAAUjB,EAAE,CAACE,QAAH,CAAYc,EAAtB;EACH;EACJ,GAZD;;EAaAH,EAAAA,GAAG,CAACpD,SAAJ,CAAcwD,MAAd,GAAuB,UAAUD,EAAV,EAAc;EACjC,QAAMhB,EAAE,GAAG,IAAX;EACA,QAAMe,OAAO,GAAGf,EAAE,CAACE,QAAnB;EACAc,IAAAA,EAAE,GAAGE,QAAQ,CAACC,aAAT,CAAuBH,EAAvB,CAAL,CAHiC;EAKjC;;EACA,QAAG,CAACD,OAAO,CAACJ,MAAZ,EAAmB;EACf;EACA,UAAID,QAAQ,GAAGK,OAAO,CAACL,QAAvB,CAFe;;EAGf,UAAG,CAACA,QAAD,IAAaM,EAAhB,EAAmB;EACfN,QAAAA,QAAQ,GAAGM,EAAE,CAACI,SAAd;EACH;;EACDpD,MAAAA,OAAO,CAACC,GAAR,CAAYyC,QAAZ,EANe;;EAQf,UAAMC,MAAM,GAAGF,iBAAiB,CAAA,CAAhC;EACAM,MAAAA,OAAO,CAACJ,MAAR,GAAiBA,MAAjB;EACH;EACJ,GAjBD;EAkBH;;ECpCD;;EAEA,SAASE,GAAT,CAAaE,OAAb,EAAsB;EAClB;EACA;EACA,OAAKD,KAAL,CAAWC,OAAX;EACH;;;EAGDH,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}